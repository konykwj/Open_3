#A program to create data for the paper. This is the one which
#created the data used in the plots.

import Open_3 as O3
import numpy as np
import qutip as qt
import pp

def run():

    #Simple states to call:
    GHZ=psi0=1.0/np.sqrt(2)*(qt.tensor(qt.basis(2,0),qt.basis(2,0),qt.basis(2,0))+qt.tensor(qt.basis(2,1),qt.basis(2,1),qt.basis(2,1)))
    W=psi0=1.0/np.sqrt(3)*(qt.tensor(qt.basis(2,1),qt.basis(2,0),qt.basis(2,0))+qt.tensor(qt.basis(2,0),qt.basis(2,1),qt.basis(2,0))+qt.tensor(qt.basis(2,0),qt.basis(2,0),qt.basis(2,1)))
    Ground=psi0=qt.tensor(qt.basis(2,0),qt.basis(2,0),qt.basis(2,0))
    

    #opts=[save_Maxlists, save Raw Data, Calculate_Entanglement, Calc_Svetlinchny, Calc_Mermin, Monte Carlo(0) or Density Matrix(1)]
    #Order of runlist: [# of trajectories, # of guesses, ititial time, final time, # of timesteps, initial state, gamma1, gamma2, gamma3, g12, g23, g31, Y, know or not know, name of trial, program options].
    run_list=[[500,10,  0.0,10.0,300, W,      .1, .1, .1,    1.0, 1.0, 1.0,    10.0,   0,  "W_HD_LD",      [0,0,1,1,1,0]],
              [500,10,  0.0,10.0,300, Ground, .1, .1, .1,    1.0, 1.0, 1.0,    10.0,   0,  "Ground_HD_LD",      [0,0,1,1,1,0]],
              [500,10,  0.0,10.0,300, GHZ,    .1, .1, .1,    1.0, 1.0, 0.0,    10.0,   0,  "GHZ_HD_LD",      [0,0,1,1,1,0]],
              [0,10,  0.0,10.0,500, W,      .1, .1, .1,    1.0, 1.0, 1.0,    10.0,   0,  "W_HD_LD",      [0,0,1,1,1,1]],
              [0,10,  0.0,10.0,500, Ground, .1, .1, .1,    1.0, 1.0, 1.0,    10.0,   0,  "Ground_HD_LD",      [0,0,1,1,1,1]],
              [0,10,  0.0,10.0,500, GHZ,    .1, .1, .1,    1.0, 1.0, 0.0,    10.0,   0,  "GHZ_HD_LD",      [0,0,1,1,1,1]],
              
            ]

    nodes=()#('10.34.235.152','10.34.235.147')#,'10.34.235.153','10.34.235.141') #('10.34.135.154','10.34.235.149','10.34.235.142','10.34.235.152','10.34.235.147','10.34.235.153','10.34.235.141','10.34.235.139',)
    local_cpus=12
    job_server = pp.Server(ppservers=nodes,ncpus=local_cpus,secret='12345Spaceballs')

    O3.Test([1,1,1,1,1,1],job_server)
    O3.Test([1,1,1,1,1,0],job_server)

    
    for i in range(len(run_list)):
        run_info=run_list[i]
        
        ntraj=run_info[0]
        guess=run_info[1]
        t0=run_info[2]
        tf=run_info[3]
        tsteps=run_info[4]
        psi0=run_info[5]
        gamma1=run_info[6]              #spontaneous emission rate
        gamma2=run_info[7]
        gamma3=run_info[8]

        g12=run_info[9]                    #atom-cavity coupling
        g23=run_info[10]
        g31=run_info[11]

        Y=run_info[12]                 #amplitude of driving field

        know=run_info[13]

        name=run_info[14]
        opts=run_info[15]
        hbar=1

        H=1j*hbar*Y*(O3.sm1.dag()-O3.sm1)+hbar*g12*(O3.sm1.dag()*O3.sm2+O3.sm2.dag()*O3.sm1)+hbar*g23*(O3.sm2.dag()*O3.sm3+O3.sm3.dag()*O3.sm2)+hbar*g31*(O3.sm3.dag()*O3.sm1+O3.sm1.dag()*O3.sm3)

        O3.DC_Run(opts,name,know,H,psi0,ntraj,gamma1,gamma2,gamma3,g12,g23,g31,Y,t0,tf,tsteps,guess,job_server)

run()
